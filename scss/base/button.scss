//
//Variable for button
//
// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold: 150 !default;
// Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-dark: #000 !default;
$yiq-text-light: #fff !default;
//how much persent darker to do colors when button hover
$button-hover-darken-persent: 15% !default;

//
// function Color contrast (what color to use #000 or #fff)
//

@function color-yiq($color) {
	$r: red($color);
	$g: green($color);
	$b: blue($color);
	$yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

	@if ($yiq >=$yiq-contrasted-threshold) {
		@return $yiq-text-dark;
	} @else {
		@return $yiq-text-light;
	}
}

//
// Button variants mixins
//

@mixin button-variant(
	$background: $color-brand,
	$color: color-yiq($background),
	$border: $background,
	$hover-background: transparent,
	$hover-color: color-yiq($hover-background),
	$hover-border: $background
) {
	color: $color;
	background-color: $background;
	border-color: $border;

	&:hover {
		color: $hover-color;
		background-color: $hover-background;
		border-color: $hover-border;
	}
}

@mixin button-outline-variant(
	$color: $color-brand,
	$color-hover: color-yiq($color),
	$hover-background: $color,
	$color-border: $color,
	$hover-border: $color-hover
) {
	color: $color;
	background-color: transparent;
	background-image: none;
	border-color: $color-border;

	&:hover {
		color: $color-hover;
		background-color: $hover-background;
		border-color: $hover-border;
	}
}

//input mixin without hover
@mixin input-variant(
	$background: $fon-brand,
	$color: color-yiq($background),
	$border: $background
) {
	color: $color;
	background-color: $background;
	border-color: $border;
}

//
// Button sizes mixin
//

@mixin button-size(
	$padding: var(--btn-y) var(--btn-x),
	$font-size: var(--btn-fz),
	$border-radius: var(--btn-r),
	$border-width: var(--btn-b),
	$line-height: 1.5
) {
	padding: $padding;
	font-size: $font-size;
	line-height: $line-height;
	border-width: $border-width;
	border-radius: $border-radius;
}

//
//-------------------style for button
//

//
// Base styles for button
//
.btn {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	min-width: 8.5rem;
	max-width: 100%;
	font-weight: 600;
	text-align: center;
	vertical-align: middle;
	border-style: solid;
	transition: all var(--animation-duration) var(--animation-timing-function);

	//variable located markup-template/scss/base/variables.scss
	//size button mixin
	// $btn-padding-y | $btn-padding-x | $btn-font-size | $btn-radius | $btn-border-width | $btn-line-height
	@include button-size(); // default
	//color button mixin $background | $color | $border | $hover-background | $hover-color | $hover-border
	@include button-variant(
		$btn-bg-color,
		#fff,
		$btn-bg-color,
		transparent,
		var(--text-color-secondary)
	);

	& > * {
		margin-right: 1rem;

		&:last-child {
			margin-right: 0;
		}
	}

	&__ico {
		flex-shrink: 0;
		fill: currentColor;

		&--nofilling {
			fill: none;
		}
	}

	&:hover {
		text-decoration: none;
	}
}

//
// Button types (primary, secondary)
//
.btn--grad {
	position: relative;
	z-index: zIndex("default");
	overflow: hidden;

	&:hover,
	&:focus {
		&::before {
			opacity: 1;
		}
	}

	&:focus {
		&::before {
			background: linear-gradient(53.21deg, var(--bg-color-primary) -22.34%, var(--bg-color-secondary) 43.83%, var(--bg-color-tertiary) 106.35%);
		}
	}

	&::before {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		content: " ";
		background: linear-gradient(41.71deg, var(--bg-color-primary) 12.72%, var(--bg-color-secondary) 61.31%, var(--bg-color-tertiary) 107.23%);
		opacity: 0;
		transition: opacity var(--animation-duration) var(--animation-timing-function);
	}

	& > * {
		position: relative;
		z-index: zIndex("default") + 1;
	}
}

.btn--grad-text {
	transition: none;

	&:hover,
	&:focus {
		.btn__ico {
			fill: var(--color-white);

			path,
			line,
			rect {
				stroke: url(#marker-grad);
			}
		}

		.btn__text {
			color: transparent;

			&::before {
				opacity: 1;
			}
		}
	}

	&:focus {
		.btn__text {
			&::before {
				background: linear-gradient(27.4deg, var(--bg-color-primary) -125.29%, var(--bg-color-secondary) -5.16%, var(--bg-color-tertiary) 108.36%);
			}
		}
	}

	.btn__text,
	.btn__ico path,
	.btn__ico line,
	.btn__ico rect {
		transition: color var(--animation-duration) var(--animation-timing-function);
	}

	.btn__text {
		position: relative;
		z-index: zIndex("default");
		display: inline-block;
		overflow: hidden;

		&::before {
			position: absolute;
			top: 0;
			left: 0;
			z-index: 20;
			width: 100%;
			height: 100%;
			content: attr(data-btn-text);
			background: linear-gradient(41.71deg, var(--bg-color-primary) 12.72%, var(--bg-color-secondary) 61.31%, var(--bg-color-tertiary) 107.23%);
			background-clip: text;
			-webkit-text-fill-color: transparent;
			-webkit-background-clip: text;
			opacity: 0;
			transition: opacity var(--animation-duration) var(--animation-timing-function);
		}
	}
}

.btn--primary {
	--btn-color-primary: var(--bg-color-primary);
	@include button-variant(var(--btn-color-primary), var(--color-white), var(--btn-color-primary), transparent, var(--color-white), transparent);
}

.btn--secondary {
	--btn-color-secondary: var(--bg-color-secondary);
	@include button-variant(var(--btn-color-secondary), var(--color-white), var(--btn-color-secondary), transparent, var(--color-white), transparent);
}

.btn--light {
	--btn-color-light: var(--color-white);
	@include button-variant(var(--btn-color-light), var(--text-color-accent), var(--btn-color-light), var(--color-white), var(--text-color-primary));
}

.btn--lightblue {
	--btn-color-lightblue: var(--color-blue-light2);
	@include button-variant(var(--btn-color-lightblue), var(--color-white), var(--btn-color-lightblue), var(--color-white), var(--text-color-accent));
}

.btn--gray {
	--btn-color-gray: var(--color-gray-gall);
	@include button-variant(var(--btn-color-gray), var(--color-white), var(--btn-color-gray), transparent, var(--color-black));
}

.btn--info {
	--btn-color-lightblue: var(--color-link-water);
	@include button-variant(var(--btn-color-lightblue), var(--text-color-accent), var(--btn-color-lightblue), var(--bg-color-primary), var(--color-white));
}

// If need outline button
.btn--outline {
	color: var(--text-color-accent);
	background-color: transparent;

	&-primary {
		border-color: var(--bg-color-primary);

		&:hover {
			color: var(--color-white);
			background-color: var(--bg-color-primary);
		}
	}
	//color outline-button mixin $color | $color-hover | $hover-background | $color-border | $hover-border
}

//
// Button Sizes
//

// if need other size button
.btn--sm {
	@include button-size(
		var(--btn-sm-y) var(--btn-sm-x),
		var(--btn-sm-fz),
		var(--btn-sm-r),
		var(--btn-sm-b),
		1.2
	);
}

.btn--md {
	min-width: 22.6rem;
}

//
// Link buttons. Make a button look and behave like a link
//
.btn-link {
	display: inline-flex;
	align-items: center;
	font-weight: 600;
	color: var(--text-color-accent);
	background-color: transparent;
	transition: all var(--animation-duration) var(--animation-timing-function);

	& > * {
		margin-right: 1.2rem;

		&:last-child {
			margin-right: 0;
		}
	}

	&__text {
		line-height: 1;
	}

	&__arrow {
		flex-shrink: 0;
		fill: currentColor;
		transition: transform var(--animation-duration) var(--animation-timing-function);
	}
}

//
// Block button
//
.btn-block {
	display: block;
	width: 100%;

	// Vertically space out multiple block buttons
	& + .btn-block {
		margin-top: 15px;
	}
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
	&.btn-block {
		width: 100%;
	}
}

//
// Group button
//
// .btn-group {

// }
